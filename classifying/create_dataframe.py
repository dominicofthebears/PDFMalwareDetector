import pandas as pd
import warnings
from data_preprocessing.cleaning import clean_and_fill
from data_preprocessing.discretization import equal_frequency_binning


def reduced_dataframe():

    warnings.filterwarnings("ignore")
    dataframe = pd.read_csv("../datasets/PDFMalware2022.csv").dropna()
    targets = dataframe['Class']
    example_to_classify = pd.read_csv("../datasets/ToClassify.csv")
    X_train = dataframe[["pdfsize", "metadata size", "pages", "title characters", "isEncrypted",
                                   "images", "text", "Javascript"]]

    X_train = clean_and_fill(X_train)

    # histogram based outlier detection, not applying that on testing set
    X_train = X_train.drop(X_train[X_train["pdfsize"] > 11000].index)
    X_train = X_train.drop(X_train[X_train["metadata size"] > 10000].index)

    X_train, example_to_classify = equal_frequency_binning(X_train, example_to_classify, 5, "categorical")
    X_train = pd.concat([X_train, targets], axis=1)
    X_train.to_csv("../datasets/ClassificationTrainingSet.csv", index=False)
    example_to_classify.to_csv("../datasets/ClassificationTestSet.csv", index=False)



