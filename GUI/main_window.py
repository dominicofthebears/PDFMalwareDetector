import shutil
from pathlib import Path
import PySimpleGUI as sg
import pandas as pd
from classifying.create_dataframe import reduced_dataframe
from classifying.extract_features import feature_extractor
from classifying.reduced_cn2_rule_classifier import CN2_classify
from classifying.reduced_trees import tree_classify
from GUI import results_window


def main():
    sg.theme("DarkTeal2")
    layout = [[sg.T("")], [sg.Text("Choose a file: "), sg.Input(), sg.FileBrowse(key="-IN-")],
              [sg.Button("Submit")],
              [sg.Text("Choose a classifier: "), sg.Radio('Decision Tree', 'clf', default=True, key="DecisionTree"),
               sg.Radio('Adaboost', 'clf', key="Adaboost"), sg.Radio('CN2', 'clf', key="CN2")],
              [sg.ProgressBar(5, orientation='h', size=(50, 20), border_width=4, key="-PROGRESS_BAR-")]]

    window = sg.Window('PDF Malware detector', layout, size=(600, 200))

    while True:
        event, values = window.read()
        if event == sg.WIN_CLOSED or event == "Exit":
            break

        elif event == "Submit":
            fname = values["-IN-"]

            if not fname:
                sg.popup("Cancel", "No filename supplied")

            if Path(fname).is_file():

                try:
                    if fname.endswith('.pdf'):
                        i = 0
                        shutil.copyfile(fname, "../pdf/sample.pdf")
                        window["-PROGRESS_BAR-"].update(i + 1)
                        i += 1

                        feature_extractor()
                        window["-PROGRESS_BAR-"].update(i + 1)
                        i += 1

                        reduced_dataframe()
                        window["-PROGRESS_BAR-"].update(i + 1)
                        i += 1

                        dataframe = pd.read_csv("../datasets/ClassificationTrainingSet.csv")
                        test = pd.read_csv("../datasets/ClassificationTestSet.csv")
                        window["-PROGRESS_BAR-"].update(i + 1)
                        i += 1

                        if values["DecisionTree"]:
                            clf = "DecisionTree"
                            output = tree_classify(dataframe, test, clf)
                            window["-PROGRESS_BAR-"].update(i + 1)
                            results_window.show_results(clf, output)

                        elif values["Adaboost"]:
                            clf = "Adaboost"
                            output = tree_classify(dataframe, test, clf)
                            window["-PROGRESS_BAR-"].update(i + 1)
                            results_window.show_results(clf, output)

                        else:
                            output = CN2_classify(dataframe, test)
                            window["-PROGRESS_BAR-"].update(i + 1)
                            results_window.show_results("CN2_learner", output)
                    else:
                        sg.popup("Not a pdf file, please select a valid file")
                except Exception as e:
                    sg.popup("Error: ", e)


if __name__ == '__main__':
    main()